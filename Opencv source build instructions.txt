OpenCV may have to be built from source. First try this:

$ sudo apt update
$ sudo apt install libopencv-dev python3-opencv
$ python3
$ >>> import cv2

If this worked then you should get no error on the cv2 import. However if this did not work, or an older version of Opencv
may not support the most current functions. If so, then you will have to build from source.

To build from source:

1. Install all dependencies.

$ sudo apt install build-essential cmake git pkg-config libgtk-3-dev \
libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
gfortran openexr libatlas-base-dev python3-dev python3-numpy \
libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev \
libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev

2. Clone opencv repositories.

$ mkdir ~/opencv_build && cd ~/opencv_build
$ git clone https://github.com/opencv/opencv.git
$ git clone https://github.com/opencv/opencv_contrib.git

3. Make a build directory.

$ cd ~/opencv_build/opencv
$ mkdir -p build && cd build

4. Setup cmake.

$ cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D INSTALL_C_EXAMPLES=ON \
-D INSTALL_PYTHON_EXAMPLES=ON \
-D OPENCV_GENERATE_PKGCONFIG=ON \
-D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
-D BUILD_EXAMPLES=ON ..

5. Start compilation.

$ make -j4 (or how many number of cores you have)

6. Install.

$ sudo make install

7. Verify successful install.

$ pkg-config --modversion opencv4 (for C++ bindings, should give you version)
$ python3 -c "import cv2; print(cv2.__version__)" (to check for python bindings.)

If no errors are generated, then Opencv is good to go.

You may also have to update python modules if you get errors. I had to run

$ sudo pip3 install numpy --upgrade

to upgrade numpy because the import was giving me a matrix error.
